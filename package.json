{
    "license": "MIT",
    "author": "Maximon9",
    "publisher": "Maximon9",
    "name": "mechcommit",
    "displayName": "MechCommit",
    "description": "This extension tries to make commiting on vscode alot easier.",
    "repository": {
        "type": "git",
        "url": "https://github.com/Maximon9/mechcommit.git"
    },
    "version": "0.0.5",
    "icon": "./assets/icons/mechIcon.png",
    "engines": {
        "vscode": "^1.95.0"
    },
    "categories": [
        "Other"
    ],
    "keywords": [
        "mech",
        "mech commit",
        "mechcommit",
        "auto",
        "commit",
        "message",
        "git",
        "automatic",
        "auto commit",
        "github",
        "generate",
        "generate commit",
        "master",
        "auto commit master",
        "bitbucket",
        "automation",
        "repo",
        "GitLens",
        "scm",
        "git extension",
        "auto pilot"
    ],
    "activationEvents": [],
    "main": "./dist/extension.js",
    "contributes": {
        "commands": [
            {
                "command": "mechcommit.run",
                "title": "run",
                "category": "MechCommit",
                "icon": {
                    "dark": "assets/icons/startLight.svg",
                    "light": "assets/icons/start.svg"
                }
            },
            {
                "command": "mechcommit.stop",
                "title": "stop",
                "category": "MechCommit",
                "icon": {
                    "dark": "assets/icons/stopLight.svg",
                    "light": "assets/icons/stop.svg"
                }
            }
        ],
        "configuration": {
            "title": "MechCommit",
            "properties": {
                "mechcommit.stopTime": {
                    "type": "number",
                    "default": 1,
                    "description": "Time in seconds you want it to give you in order to stop the extension after it has ran"
                },
                "mechcommit.actionStrings": {
                    "type": "object",
                    "default": {
                        "addedFiles": "Added",
                        "updatedFiles": "Updated",
                        "deletedFiles": "Deleted"
                    },
                    "description": "Tells the extension what strings to use to write the commit messages for modified files"
                },
                "mechcommit.PreCommitCommand": {
                    "type": "string",
                    "enum": [
                        "none",
                        "fetch",
                        "fetch&merge",
                        "pull"
                    ],
                    "markdownEnumDescriptions": [
                        "Don't run any command before a commit.",
                        "Run 'git fetch' before a commit.",
                        "Run 'git fetch' then `git merge` before a commit.",
                        "Run 'git pull' before a commit."
                    ],
                    "default": "none",
                    "description": "Runs a git command before a commit"
                },
                "mechcommit.runPostCommitCommand": {
                    "type": "boolean",
                    "default": true,
                    "description": "If true, the post commit command runs"
                },
                "mechcommit.overridePostCommitCommand": {
                    "type": "string",
                    "enum": [
                        "nooverride",
                        "none",
                        "push",
                        "sync"
                    ],
                    "markdownEnumDescriptions": [
                        "There is no override",
                        "Don't run any command after a commit.",
                        "Run 'git push' after a successful commit.",
                        "Run 'git pull' and 'git push' after a successful commit."
                    ],
                    "default": "nooverride",
                    "description": "Overrides the current post commit command, which runs a command after a successful commit"
                }
            }
        },
        "menus": {
            "scm/title": [
                {
                    "command": "mechcommit.run",
                    "when": "scmProvider == git && !mechcommit.active",
                    "group": "navigation"
                },
                {
                    "command": "mechcommit.stop",
                    "when": "scmProvider == git && mechcommit.active",
                    "group": "navigation"
                }
            ]
        }
    },
    "scripts": {
        "vscode:prepublish": "npm run package",
        "compile": "npm run check-types && npm run lint && node esbuild.js",
        "watch": "npm-run-all -p watch:*",
        "watch:esbuild": "node esbuild.js --watch",
        "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
        "package": "npm run check-types && npm run lint && node esbuild.js --production",
        "compile-tests": "tsc -p . --outDir out",
        "watch-tests": "tsc -p . -w --outDir out",
        "pretest": "npm run compile-tests && npm run compile && npm run lint",
        "check-types": "tsc --noEmit",
        "lint": "eslint src",
        "test": "vscode-test",
        "publish": "node publish.js"
    },
    "devDependencies": {
        "@types/vscode": "^1.95.0",
        "@types/mocha": "^10.0.9",
        "@types/node": "20.x",
        "@typescript-eslint/eslint-plugin": "^8.10.0",
        "@typescript-eslint/parser": "^8.7.0",
        "eslint": "^9.13.0",
        "esbuild": "^0.24.0",
        "npm-run-all": "^4.1.5",
        "typescript": "^5.6.3",
        "@vscode/test-cli": "^0.0.10",
        "@vscode/test-electron": "^2.4.1"
    }
}
